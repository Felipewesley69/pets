{"ast":null,"code":"import { NavigationCancel, NavigationEnd, NavigationError } from '@angular/router';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"./core/services/loading.service\";\nimport * as i2 from \"@angular/router\";\nimport * as i3 from \"@angular/common\";\nimport * as i4 from \"./modules/layout/header/header.component\";\nimport * as i5 from \"./shared/components/resolve/resolve.component\";\nimport * as i6 from \"./shared/components/loading-general/loading-general.component\";\n\nfunction AppComponent_app_resolve_0_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"app-resolve\");\n  }\n}\n\nfunction AppComponent_app_loading_general_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"app-loading-general\");\n  }\n}\n\nexport let AppComponent = /*#__PURE__*/(() => {\n  class AppComponent {\n    constructor(loadingService, router) {\n      this.loadingService = loadingService;\n      this.title = 'pets';\n      this.load = true;\n      this.classLoader = '';\n      this.showLoader$ = this.loadingService.showLoading$;\n      router.events.subscribe(event => {\n        if (event instanceof NavigationEnd || event instanceof NavigationCancel || event instanceof NavigationError) {\n          setTimeout(() => this.load = false, 1000); // this.load = false;\n        }\n      });\n    }\n\n  }\n\n  AppComponent.ɵfac = function AppComponent_Factory(t) {\n    return new (t || AppComponent)(i0.ɵɵdirectiveInject(i1.LoadingService), i0.ɵɵdirectiveInject(i2.Router));\n  };\n\n  AppComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: AppComponent,\n    selectors: [[\"app-root\"]],\n    decls: 5,\n    vars: 4,\n    consts: [[4, \"ngIf\"]],\n    template: function AppComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵtemplate(0, AppComponent_app_resolve_0_Template, 1, 0, \"app-resolve\", 0);\n        i0.ɵɵtemplate(1, AppComponent_app_loading_general_1_Template, 1, 0, \"app-loading-general\", 0);\n        i0.ɵɵpipe(2, \"async\");\n        i0.ɵɵelement(3, \"app-header\");\n        i0.ɵɵelement(4, \"router-outlet\");\n      }\n\n      if (rf & 2) {\n        i0.ɵɵproperty(\"ngIf\", ctx.load);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", i0.ɵɵpipeBind1(2, 2, ctx.showLoader$));\n      }\n    },\n    directives: [i3.NgIf, i4.HeaderComponent, i2.RouterOutlet, i5.ResolveComponent, i6.LoadingGeneralComponent],\n    pipes: [i3.AsyncPipe],\n    styles: [\"\"]\n  });\n  return AppComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}