{"ast":null,"code":"import { EventEmitter } from '@angular/core';\nimport { AddHttpParams } from '@shared/add-http-params';\nimport { LoadingService } from '@shared/services/loading.service';\nimport { environment } from 'environments/environment';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport let CommentsService = /*#__PURE__*/(() => {\n  class CommentsService extends LoadingService {\n    constructor(http) {\n      super();\n      this.http = http;\n      this.updatePosts = new EventEmitter();\n    }\n\n    get url() {\n      return environment.api;\n    }\n\n    getByPost(id, filter, loading) {\n      this.startLoading(loading);\n      const params = new AddHttpParams(filter).createParams();\n      return this.http.get(`${this.url}/post/${id}/comment`, {\n        params\n      }).pipe(this.configMapAndLoading(loading));\n    }\n\n    create(data, loading) {\n      this.startLoading(loading);\n      return this.http.post(`${this.url}/comment/create`, Object.assign({}, data)).pipe(this.configMapAndLoading(loading));\n    }\n\n    delete(id, loading) {\n      this.startLoading(loading);\n      return this.http.delete(`${this.url}/comment/${id}`).pipe(this.configMapAndLoading(loading));\n    }\n\n  }\n\n  CommentsService.ɵfac = function CommentsService_Factory(t) {\n    return new (t || CommentsService)(i0.ɵɵinject(i1.HttpClient));\n  };\n\n  CommentsService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: CommentsService,\n    factory: CommentsService.ɵfac\n  });\n  return CommentsService;\n})();","map":null,"metadata":{},"sourceType":"module"}