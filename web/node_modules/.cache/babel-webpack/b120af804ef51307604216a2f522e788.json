{"ast":null,"code":"import { environment } from 'environments/environment';\nimport { LoadingService } from './loading.service';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport let UserServiceService = /*#__PURE__*/(() => {\n  class UserServiceService extends LoadingService {\n    constructor(http) {\n      super();\n      this.http = http;\n    }\n\n    get url() {\n      return environment.api;\n    }\n\n    get userId() {\n      return this.loggedUserId;\n    }\n\n    setId(value) {\n      this.loggedUserId = value;\n    }\n\n    updateUserId() {\n      this.loggedUserId = window.sessionStorage.getItem('token');\n    }\n\n    load() {\n      return this.http.get(`${this.url}/user`);\n    }\n\n    findById(id, loading) {\n      this.startLoading(loading);\n      return this.http.get(`${this.url}/user/${id}`).pipe(this.configMapAndLoading(loading));\n    }\n\n    update(id, entity) {\n      return this.http.put(`${this.url}/user/${id}`, Object.assign({}, entity));\n    }\n\n    save(entity) {\n      return this.http.put(`${this.url}/user/create`, Object.assign({}, entity));\n    }\n\n  }\n\n  UserServiceService.ɵfac = function UserServiceService_Factory(t) {\n    return new (t || UserServiceService)(i0.ɵɵinject(i1.HttpClient));\n  };\n\n  UserServiceService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: UserServiceService,\n    factory: UserServiceService.ɵfac,\n    providedIn: 'root'\n  });\n  return UserServiceService;\n})();","map":null,"metadata":{},"sourceType":"module"}